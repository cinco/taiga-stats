# Taiga Statistics Tool

This is a script for all you "Kanban masters" who use Taiga and are interested in visualizing progress and generate some automated statistics.

# Features

```console
$ taiga-stats --help
<insert-helptext-here>
```

## Cumulative Flow Diagram

From a [CFD](http://brodzinski.com/2013/07/cumulative-flow-diagram.html) a lot of interesting insights about your team's progress [can be found](http://paulklipp.com/images/Interpreting_a_Cumulative_Flow_Diagram.jpg). However I'm not found of repetitive work like counting and entering numbers in an Excel sheet. This had to be automated! Therefore I deiced to write this script to save data on a daily basis with a cron job and a function for generating this diagram. This diagram can the be put on a TV visible in the hallways.


This is an example diagram generated from [mock data](sample_data/cfd_example.dat):

![Example CFD](img/cfd_example.png)


To save the data and generate the diagram each working day I have this cronjob:

```console
$ crontab -l | grep taiga
0 18 * * 1-5            $HOME/bin/taiga-stats_cron.sh
```

and the script `taiga-stats_cron.sh`:

```bash
#!/usr/bin/env sh

source $HOME/dev/virtualenvs/py3env/bin/activate
cd $HOME/dev/taiga-stats

./taiga-stats store_daily --tag some_feature_tag
./taiga-stats cfd --tag some_feature_tag
```

## User Story Dependency Graph

Some stories requires other to be completed before they can be started. I thought it would be handy if you could keep track of these dependencies in Taiga but simply writing for each US a list of other stories that this story depends on. Then from this information a  `.dot` file can be generated that should how you user stories depends on each other. This graph is very useful for work planning i.e. what to start with and how much parallelization is possible and at what stages.

First create a new custom filed in taiga named `Depends on` under Settings > Attributes > Custom Fields:

![Custom Field](img/taiga_custom_field.png)


Then go to you stories and enter some dependencies as demonstrated below.

![US dependency](img/us_depends_on.png)


Then run the script and generate a png file.


```console
$ taiga-stats deps_dot
$ dot -T png -o ./dependencies.png ./dependencies.dot
```

![US Dependency Graph](img/dependencies_example.png)


# Setup

## Virtual environment (optional)

It is recommended to use virtual environment to not pollute your system.

```console
$ sudo apt-get install python3-dev
$ cd some/dev/dir
$ virtualenv -p /usr/bin/python3 py3env
$ source py3env/bin/activate
```

## Dependencies

Use either

pip (recommended)

```console
$ pip install -r requirements.txt
```

or setuptools

```console
$ python setup.py install
```

## Taiga-stats

```console
$ git clone https://github.com/erikw/taiga-stats.git
$ cd taiga-stats
$ ./taiga-stats -h
```
